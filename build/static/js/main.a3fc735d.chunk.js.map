{"version":3,"sources":["Components/Home.module.css","Components/SearchOutput.module.css","Components/SearchForm.module.css","Components/AboutMe.module.css","Components/NavBar.module.css","Components/Billy_Ohio.ttf","Components/NavBar.js","Utils/publicUrl.js","Contact.js","Components/AboutMe.js","Utils/windowDimensions.js","Components/Home.js","Components/SearchOutput.js","Components/Map.js","Components/SearchForm.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","props","bgcolor","bg","scroll","setScroll","useState","useEffect","document","addEventListener","scrollCheck","window","scrollY","React","createElement","src","allow","title","style","display","Navbar","fixed","className","css","navCont","collapseOnSelect","expand","Brand","href","Image","assetPath","startsWith","logo","Toggle","aria-controls","toggler","Collapse","id","navbarContainer","Nav","navbarNav","divNavBlack","divNavWhite","Item","navItemBlack","navItemWhite","Link","textWhite","textBlack","Contact","email","setEmail","name","setName","submitting","setSubmitting","message","setMessage","text","Container","Grid","container","spacing","item","lg","TextField","variant","margin","label","type","fullWidth","onChange","n","target","value","multiline","rows","m","CircularProgress","Button","onClick","fetch","method","headers","body","JSON","stringify","then","res","json","data","success","useRef","current","setTimeout","AboutMe","aboutmecont","sm","md","headshot","rounded","fontSize","paddingTop","getWindowDimensions","innerWidth","width","innerHeight","height","Home","console","log","windowDimensions","setWindowDimensions","handleResize","removeEventListener","useWindowDimensions","index","setIndex","changeIndex","images","mainCont","screen","alt","LazyLoad","once","overlay","left","top","overlayTitle","shape","bubble","ghost","bubbleR","SearchOutput","open","setOpen","handleClickOpen","handleClose","formatter","Intl","NumberFormat","currency","properties","outputCont","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","to","color","autoFocus","map","p","xs","property","Card","card","Img","thumbnail","Body","Title","propertyText","format","price","Text","address","line","city","postal_code","Footer","building_size","size","beds","baths","Map","modalProperty","setModalProperty","lat","lon","GoogleMapExample","withGoogleMap","GoogleMap","defaultCenter","lng","defaultZoom","Marker","position","e","containerElement","mapElement","isMarked","Modal","show","onHide","Header","fluid","SearchForm","setCity","setProperties","footage","setFootage","setType","bedrooms","setBedrooms","bath","setBaths","features","setFeatures","clicked","setClicked","error","setError","minPrice","setMinPrice","maxPrice","setMaxPrice","visible","setVisible","Option","Select","menu","key","backgroundColor","justify","List","Divider","Checkbox","checked","val","placeholder","listHeight","Input","temp","handleFootageChange","handleMaxFootageChange","Dropdown","onVisibleChange","flag","DownOutlined","toggle","async","max","forSaleUrl","url","r","length","loading","marginTop","marginBottom","App","link","appendChild","click","parentNode","removeChild","require","config","Router","basename","process","Switch","Route","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a3fc735d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerImg\":\"Home_headerImg__37r5u\",\"container\":\"Home_container__2z0pk\",\"overlayTitle\":\"Home_overlayTitle__2xRBF\",\"bubble\":\"Home_bubble__3FMJ6\",\"bubbleR\":\"Home_bubbleR__1HRzt\",\"mainCont\":\"Home_mainCont__3j77H\",\"animation\":\"Home_animation__1OtrO\",\"overlay\":\"Home_overlay__1_rbB\",\"screen\":\"Home_screen__OcSv6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outputCont\":\"SearchOutput_outputCont__IpZGt\",\"card\":\"SearchOutput_card__1-kuy\",\"property\":\"SearchOutput_property__37O7S\",\"propertyText\":\"SearchOutput_propertyText__2cLT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col\":\"SearchForm_col__1C5yc\",\"title\":\"SearchForm_title__3cAwA\",\"searchButton\":\"SearchForm_searchButton__aw0i0\",\"price\":\"SearchForm_price__XPVtj\",\"toggle\":\"SearchForm_toggle__1TlKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headshot\":\"AboutMe_headshot__1ihzD\",\"aboutmecont\":\"AboutMe_aboutmecont__3olLA\",\"description\":\"AboutMe_description__uw_56\",\"cardcontainer\":\"AboutMe_cardcontainer__1Clvd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItemBlack\":\"NavBar_navItemBlack__3eCtS\",\"navItemWhite\":\"NavBar_navItemWhite__2V3cD\",\"logo\":\"NavBar_logo__2b9K_\",\"NavItem\":\"NavBar_NavItem__3Gt1P\",\"textWhite\":\"NavBar_textWhite__2HuEU\",\"textBlack\":\"NavBar_textBlack__1gQ9Q\",\"navbarContainer\":\"NavBar_navbarContainer__2NaRj\",\"navCont\":\"NavBar_navCont__3Q8Ja\",\"navbarNav\":\"NavBar_navbarNav__2vdBq\",\"toggler\":\"NavBar_toggler__3BmsR\",\"navbar-light\":\"NavBar_navbar-light__Rg5CE\",\"navbar-toggler-icon\":\"NavBar_navbar-toggler-icon__1W5Iy\"};","module.exports = __webpack_public_path__ + \"static/media/Billy_Ohio.95aed621.ttf\";","import React,{useEffect,useState} from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav'\nimport Image from 'react-bootstrap/Image'\nimport publicUrl from \"Utils/publicUrl\"\nimport css from \"../Components/NavBar.module.css\"\n\n\nexport default function NavBar(props){\n\n  var bgcolor = false;\n  if (props.bg === \"true\"){\n    bgcolor = false;\n  }\n  else{\n    bgcolor = true;\n  }\n  \n    const [scroll, setScroll] = useState(1)\n\n\n    useEffect(() => {\n      document.addEventListener(\"scroll\", () => {\n        const scrollCheck = window.scrollY < 50\n        if (scrollCheck !== scroll) {\n          setScroll(scrollCheck)\n        }\n      })\n\n    })\n\n    \n    return(\n      <div>\n          <iframe src=\"song.wav\" allow=\"autoplay\" title=\"audio\" style={{display: \"none\"}}></iframe>\n          {/* <audio\n            src=\"song.wav\" type = \"audio/wav\" autoPlay={true} loop id = 'playAudio'>\n          </audio> */}\n        <Navbar bg={ (scroll && bgcolor) ? \"transparent\" : \"light\"} fixed = \"top\" className = {css.navCont} collapseOnSelect expand=\"lg\">\n          <Navbar.Brand href=\"/\">   <Image src={publicUrl((scroll && bgcolor) ? \"/assets/coastal_life.jpg\" : \"/assets/coastal_life_color.jpg\")} className = {css.logo}/> </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className = { css.toggler }/> \n          <Navbar.Collapse id = \"basic-navbar-nav\" className = {css.navbarContainer}>\n            <Nav className = {css.navbarNav}>\n              <div className = {(scroll && bgcolor) ? css.divNavBlack : css.divNavWhite}>\n              <Nav.Item className = {(scroll && bgcolor) ? css.navItemBlack : css.navItemWhite}>\n                <Nav.Link href=\"/\"><strong className = {(scroll && bgcolor) ? css.textWhite : css.textBlack}> Home </strong></Nav.Link>\n              </Nav.Item>    \n              </div>    \n              <div className = {(scroll && bgcolor) ? css.divNavBlack : css.divNavWhite}>\n              <Nav.Item className = {(scroll && bgcolor) ? css.navItemBlack : css.navItemWhite}>\n                <Nav.Link  href=\"/search\"><strong className = {(scroll && bgcolor) ? css.textWhite : css.textBlack}> Search Homes</strong></Nav.Link>\n              </Nav.Item>    \n              </div>\n              {/* <div className = {(scroll && bgcolor) ? css.divNavBlack : css.divNavWhite}>\n              <Nav.Item className = {(scroll && bgcolor) ? css.navItemBlack : css.navItemWhite}>\n                <Nav.Link  href=\"/resources\"><strong className = {(scroll && bgcolor) ? css.textWhite : css.textBlack}> About Brevard </strong></Nav.Link>\n              </Nav.Item>    \n              </div>         */}\n              {/* <div className = {scroll ? css.divNavBlack : css.divNavWhite}>\n              <Nav.Item className = {(scroll && bgcolor) ? css.navItemBlack : css.navItemWhite}>\n                <Nav.Link href = \"/home#about\"><strong className = {(scroll && bgcolor) ? css.textWhite : css.textBlack}>About Me</strong></Nav.Link>\n              </Nav.Item>        \n              </div> */}\n              <div className = {(scroll && bgcolor) ? css.divNavBlack : css.divNavWhite}>\n              <Nav.Item className = {(scroll && bgcolor) ? css.navItemBlack : css.navItemWhite}>\n                <Nav.Link href = \"/home#contact\"><strong className = {(scroll && bgcolor) ? css.textWhite : css.textBlack}>Contact Me</strong></Nav.Link>\n              </Nav.Item>        \n              </div>\n            </Nav>\n          </Navbar.Collapse>  \n        </Navbar>\n      </div>\n    )\n\n}","export default (assetPath)=>{\n        //return process.env.PUBLIC_URL+assetPath;\n    const publicUrl = assetPath.startsWith('data:image') ? '' : process.env.PUBLIC_URL;\n    return publicUrl + assetPath;\n}","import React, { useState} from \"react\"\nimport Container from \"react-bootstrap/Container\"\nimport Grid from \"@material-ui/core/Grid\"\nimport TextField from \"@material-ui/core/TextField\"\nimport Button from \"react-bootstrap/Button\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\"\n\n\nexport default function Contact(props){\n\n    const [email,setEmail] = useState()\n    const [name, setName] = useState()\n    const [submitting, setSubmitting] = useState()\n    const [message, setMessage] = useState()\n\n    const text = {\"email\" : email, \"name\" : name, \"message\" : message}\n\n    function addEmail(props){\n      setSubmitting(true)\n          fetch('https://www.bridgettsellsbrevard.com/.netlify/functions/messages', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({text : text})\n        })\n          .then(res => res.json())\n          .then(data => {\n            if (data.success) {\n                }\n             else {\n            }\n          });\n          React.useRef.current = setTimeout(() => {\n            setSubmitting(false)\n          }, 2000);\n      }\n\n    return(\n        <Container title = \"Contact Me!\" id = \"contact\">\n            <div>\n                You can reach out to me or enter your email address and I will get back to you!\n            </div>\n            <Grid container spacing = {3} className = \"justify-content-center\">\n                <Grid container item lg = {12} className =\"justify-content-center\">\n                  <div>\n                    <h6 className = \"padding5\">\n                      Email: bridgettsellsbrevard@gmail.com\n                    </h6>                    \n                  </div>\n                  <div>\n                    <h6 className = \"padding5\">\n                      Phone: 757-817-1138\n                    </h6>                    \n                  </div>\n                </Grid>\n                <Grid container item lg = {6}>\n                    <TextField\n                    variant = \"outlined\"\n                    margin=\"dense\"\n                    id=\"email\"\n                    label=\"Email Address\"\n                    type=\"email\"\n                    fullWidth\n                    onChange={n=> setEmail(n.target.value)}\n                    />\n                </Grid>\n                <Grid container item lg = {6}>\n                    <TextField\n                    variant = \"outlined\"\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Name\"\n                    fullWidth\n                    onChange={n=> setName(n.target.value)}\n                    />\n                </Grid>      \n                <Grid container item lg = {12}>\n                    <TextField\n                    multiline\n                    rows = {6}\n                    variant = \"outlined\"\n                    margin=\"dense\"\n                    id=\"message\"\n                    label=\"Message\"\n                    fullWidth\n                    onChange={m => setMessage(m.target.value)}\n                    />\n                </Grid>                         \n            </Grid>\n            {submitting ? \n                <CircularProgress/>\n                :           \n                <Button onClick = {addEmail} variant = \"outline-dark\" className=\"margin10\">\n                    Submit\n                </Button>}   \n        </Container>\n    )\n}\n","import React from \"react\"\nimport Image from \"react-bootstrap/Image\"\nimport css from \"./AboutMe.module.css\"\nimport Contact from \"../Contact\";\nimport { Grid } from \"@material-ui/core\";\n\nexport default function AboutMe(){\n\n    return(\n        <div className = {css.aboutmecont}>\n        <div>\n            <Grid container className = \"marginTop30 justify-content-center paddingBot100\">\n                <Grid lg = {4} sm ={12} md = {3} >\n                <Image src = \"./assets/headshot.jpg\" className = {css.headshot} rounded/>\n                </Grid>\n                <Grid container item lg = {8} sm ={12} md = {9} className = \"marginTop30 justify-content-center\">\n                    <div className = \"width80\">\n                        <p style = {{fontSize: \"30px\", paddingTop:\"15%\"}}>\n                           Meet Bridgett Stuhlmiller!  A real estate agent with a love for life, the Space Coast, and making her clients her number one priority!\n                        </p>                        \n                    </div>\n\n                </Grid >   \n            </Grid>\n            {/* <div className = {css.cardcontainer}>\n                <h2>\n                    Testimonials\n                </h2>\n                <HomeCardGroup/>\n            </div> */}\n        </div>    \n        <div id = \"contact\" className = \"marginTop60 paddingBot75 paddingTop75\">\n            <h3>\n                Contact Me\n            </h3>\n           <Contact/>\n        </div>        \n        </div>\n\n    )\n}","import { useState, useEffect } from 'react';\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import React, { useState } from \"react\"\nimport NavBar from \"./NavBar\"\nimport css from \"./Home.module.css\"\nimport AboutMe from \"./AboutMe\"\nimport useWindowDimensions from \"../Utils/windowDimensions\"\nimport \"./Billy_Ohio.ttf\"\nimport {Button} from \"antd\"\nimport LazyLoad from 'react-lazyload';\nimport {Image} from \"react-bootstrap\"\n\nimport 'antd/dist/antd.css';\n\n\n\nexport default function Home(props){\n    console.log('home')\n\n    const { height, width } = useWindowDimensions();\n\n    const [index, setIndex] = useState(0);\n\n    function changeIndex(index){\n        if (index === 4){\n            setIndex(0)\n        }\n        else{\n            setIndex(index + 1)\n        }\n    }\n    const largeImages = [\"/assets/lg2.jpg\", \"/assets/lg1.jpg\", \"/assets/lg3.jpg\", \"/assets/lg4.jpg\", '/assets/lg5.jpg']\n    const smallImages = [\"/assets/sm4.jpg\", \"/assets/sm2.jpg\", \"/assets/sm3.jpg\",\"/assets/sm1.jpg\", \"/assets/sm5.jpg\"]\n\n    var images;\n    if (width < 786){\n        images = smallImages\n    }\n    else{\n        images = largeImages\n    }\n\n\n    if (width < 786){\n        setTimeout(function(){ changeIndex(index) }, 3500);\n    }\n    else{\n        setTimeout(function(){ changeIndex(index) }, 3500);\n    }\n    \n\n    return(\n        <div className = {css.mainCont}>\n            <NavBar bg = \"false\"/>  \n        <div>\n        <img width = {width} height = {height} className = {css.screen} alt = ''/>\n            <LazyLoad height = {height} width = {width} once>\n                <Image src = {images[index]}   alt = \"homepage\" height = {height} width = {width}/>\n            </LazyLoad>\n           <div className = {css.overlay} style = {{width: '100%', height: '100%', left:'0px',top: '0px'}}>\n                        <div className = {css.overlayTitle}>\n                            Love Where You Live\n                        </div>\n                        <div style = {{width: '100%', height: '100%', left:'0px',top: '0px'}}>\n                        <Button shape=\"circle\" className = {css.bubble} ghost href = \"/assets/buyerbook.pdf\">\n                            Buyers\n                        </Button>\n                        <Button shape=\"circle\" className = {css.bubbleR} ghost href = \"/assets/sellerbook.pdf\">\n                            Sellers\n                        </Button>                            \n                        </div>\n           </div>\n        </div>\n                    \n            <AboutMe/>\n        </div>\n    )\n}","import React, { useState } from \"react\"\nimport Grid from \"@material-ui/core/Grid\"\nimport Card from \"react-bootstrap/Card\"\nimport css from \"./SearchOutput.module.css\"\nimport Container from \"react-bootstrap/Container\"\nimport {Dialog, DialogContent,DialogTitle, DialogContentText, DialogActions} from \"@material-ui/core\"\nimport {Button} from \"react-bootstrap\"\nimport {Link} from \"react-router-dom\"\n\n\n\nexport default function SearchOutput(props){\n\n    const [open, setOpen] = useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n      };\n    \n      const handleClose = () => {\n        setOpen(false);\n      };\n\n\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n      });\n      const properties = props.properties;\n      \n    return(\n        <Container id ={css.outputCont}>\n        <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\" Want more information?\"}</DialogTitle>\n        <DialogContent>\n            <DialogContentText>\n                I would be happy to provide you with more information and pictures! Just click go, fill out the form and I will get back to you.\n            </DialogContentText>\n        </DialogContent>\n        <DialogActions className = \"justify-content-center\">\n        <Link to = \"/#contact\">\n\n        <Button onClick={handleClose} color=\"primary\" autoFocus className = \"margin5\">\n            Go\n        </Button>\n        </Link>\n        <Button onClick={handleClose} color=\"primary\" autoFocus className = \"margin5\">\n            Cancel\n        </Button>\n        </DialogActions>\n      </Dialog>\n        <Grid container spacing = {3}>\n\n    {properties.map(p =>\n            <Grid lg = {4} xs = {12} md = {12} onClick = {open}>\n                    <Button onClick = {handleClickOpen} ghost className = {css.property}>\n\n                <div className = \"margin10\">\n                    <Card className = {css.card}>\n                        <Card.Img variant=\"top\" src={p.thumbnail} className = \"cardImg\" />\n                        <Card.Body>\n                        <Card.Title className = {css.propertyText}>{formatter.format(p.price)}</Card.Title>\n                        <Card.Text className = {css.propertyText}>                        \n                            {p.address.line + \" \" +  p.address.city + \" \" + p.address.postal_code}\n                        </Card.Text>\n                        </Card.Body>\n                        <Card.Footer>\n                        <small className=\"text-muted\">Square Footage : {p.building_size.size}, </small>\n                        <small className=\"text-muted\">Bedrooms : {p.beds}, </small>\n                        <small className=\"text-muted\">Baths : {p.baths} </small>\n                        </Card.Footer>\n                    </Card>                  \n                </div>           \n                </Button>       \n                    \n            </Grid>     \n        )}\n    </Grid>\n\n        </Container>\n\n\n\n    )\n}","import React, {useState} from 'react';\nimport { withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from \"react-bootstrap/Button\"\nimport Image from \"react-bootstrap/Image\"\n\n\nfunction Map(props) {\n\n  const [open, setOpen] = useState(false);\n  const [modalProperty, setModalProperty] = useState();\n\n  var properties\n  if(props) {\n    properties = props.properties;\n    properties.map(p => console.log(p.address.lat +\" \"+ p.address.lon))\n\n  }\n  else{\n    properties = false\n  }\n   const GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter = { { lat: 28.2639, lng: -80.7214 } }\n        defaultZoom = { 8 }\n      >\n        {properties  ?  properties.map(p =>\n           <Marker position={{ lat: p.address.lat, lng: p.address.lon }} onClick = {e => {setOpen(true); setModalProperty(p)}}/>) : \"\"}\n      </GoogleMap>\n   ));\n\n   return(\n      <div>\n        <GoogleMapExample\n          containerElement={ <div style={{ height: `500px`, width: '100%' }} /> }\n          mapElement={ <div style={{ height: `100%` }} /> }\n          isMarked = {true}\n        />\n        {modalProperty ? \n           <Modal show={open} onHide={e => setModalProperty(false)}>\n        <Modal.Header>\n          <Modal.Title>\n            <Image src = {modalProperty.thumbnail} fluid/>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {modalProperty.address.line + \" \" +  modalProperty.address.city + \" \" + modalProperty.address.postal_code}\n          <div>\n            <small className=\"text-muted\">Square Footage : {modalProperty.building_size.size}, </small>\n            <small className=\"text-muted\">Bedrooms : {modalProperty.beds}, </small>\n            <small className=\"text-muted\">Baths : {modalProperty.baths} </small>            \n          </div>\n\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={e => setOpen(false)}>\n            Close\n          </Button>\n        </Modal.Footer>\n        </Modal>\n        : \"\"}\n      </div>\n   );\n}\nexport default Map;\n","import React,{useState} from \"react\"\nimport Container from 'react-bootstrap/Container'\nimport css from \"./SearchForm.module.css\"\nimport Grid from \"@material-ui/core/Grid\"\nimport SearchOutput from \"./SearchOutput\";\nimport { List } from \"@material-ui/core\";\nimport NavBar from \"./NavBar\";\nimport Map from \"./Map\"\nimport {Select, Input, Dropdown, Checkbox, Divider, Button} from \"antd\"\nimport { DownOutlined } from '@ant-design/icons';\n\nimport 'antd/dist/antd.css';\n\n\nexport default function SearchForm(){\n\n\n    const [city, setCity] = useState();\n    const [properties,setProperties] = useState([])\n    const [footage, setFootage] = useState([0,10000000]);\n    const [type,setType] = useState([])\n    const [bedrooms,setBedrooms] = useState()\n    const [bath,setBaths] = useState()\n    const [features, setFeatures]= useState([])\n    const [clicked, setClicked] = useState(false)\n    const [error, setError] = useState()\n    const [minPrice, setMinPrice] = useState()\n    const [maxPrice, setMaxPrice] = useState()\n    const [visible, setVisible] = useState(false)\n    const { Option } = Select;\n\n\n    async function fetchProperties(props){    \n\n        setClicked(true)\n        var max; \n        if (maxPrice === 1000000){\n            max = \"\";\n        }\n        else{max = \"&price_max=\" + maxPrice}\n\n        const forSaleUrl = \"https://realtor.p.rapidapi.com/properties/v2/list-for-sale?sort=relavance&city=\" + city + \"&limit=200&state_code=FL&sqft_min=\" + footage[0] + \"&baths_min=\" + bath + \"&beds_min=\" + bedrooms + \"&features=\" + features + \"&price_min=\" + minPrice + max + \"&prop_type=\" + type + \"&sqft_max=\" + footage[1];\n       \n        await fetch('https://www.bridgettsellsbrevard.com/.netlify/functions/search',{\n            method : 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({url : forSaleUrl})\n        })\n        .then(data => data.json())\n        .then(r => {\n            console.log(r)\n            if (r.properties.length > 0 ){setProperties(r.properties)}\n            else{ setError(r); setClicked(false)}\n        })\n    }\n\n    function handleFootageChange(props){\n        var temp = footage\n        temp[0] = props\n        setFootage(temp)\n    }\n\n    function handleMaxFootageChange(props){\n        var temp = footage\n        temp[1] = props\n        setFootage(temp)\n    }\n    function handleMenuClick(e){\n        if (e.key === '2') {\n          setVisible(false)\n        }\n      };\n\n    function handleVisibleChange(flag){\n        setVisible(flag)\n      }\n    const menu = (\n<Grid container item fullWidth onClick={handleMenuClick} style = {{backgroundColor :\"white\"}}>\n                                <Grid container item lg = {6} justify = 'center'> \n                                <List>\n\n                                <Grid item lg = {12}>\n                                <div>\n                                        Min Price\n                                    </div>\n                                </Grid>\n                                <Divider/>\n                                <Grid item lg = {12}>\n                                        <Checkbox\n                                            checked={minPrice === \"0\"}\n                                            value=\"0\"\n                                            onClick = { e => setMinPrice(e.target.value)}\n                                            color = \"primary\"\n                                        >\n                                            Any\n                                        </Checkbox>\n                                    </Grid>\n                                    <Divider/>\n                                    <Grid item lg = {12} container justify = 'center'>\n                                        <Checkbox\n                                            checked={minPrice === \"100000\"}\n                                            name=\"100k\"\n                                            value=\"100000\"\n                                            onClick = { e => setMinPrice(e.target.value)}\n                                            color = \"primary\"\n                                            >\n                                                $100,000\n                                            </Checkbox>\n                                    </Grid>\n                                    <Divider/>\n\n                                        <Grid item lg = {12}>\n                                        <Checkbox\n                                            checked={minPrice === \"200000\"}\n                                            name=\"200k\"\n                                            value=\"200000\"\n                                            onClick = { e => setMinPrice(e.target.value)}\n                                            color = \"primary\"\n                                            >\n                                                $200,000\n                                            </Checkbox>\n                                        </Grid>      \n                                        <Divider/>\n\n                                        <Grid  item lg = {12} justify>\n                                        <Checkbox\n                                            checked={minPrice === \"300000\"}\n                                            name=\"300k\"\n                                            value=\"300000\"\n                                            onClick = { e => setMinPrice(e.target.value)}\n                                            color = \"primary\"\n                                        >\n                                            $300,000\n                                        </Checkbox>\n                                        </Grid>   \n                                        <Divider/>\n\n                                        <Grid item lg = {12}>\n                                        <Checkbox\n                                            checked={minPrice === \"400000\"}\n                                            name=\"400k\"\n                                            value=\"400000\"\n                                            onClick = { e => setMinPrice(e.target.value)}\n                                            color = \"primary\"\n                                            >\n                                                $400,000\n                                            </Checkbox>\n                                        </Grid>   \n                                        <Divider/>\n\n                                        </List>\n                                </Grid>\n                                <Grid item lg = {6}>\n                                    <List>\n                                    <Grid item lg = {12}>\n                                    <div>\n                                      Max Price\n                                    </div>\n                                    </Grid>  \n                                    <Divider/>\n                                    <Grid item lg = {12}>\n                                        <Checkbox\n                                            checked={maxPrice === \"1000000\"}\n                                            value=\"1000000\"\n                                            onClick = { e => setMaxPrice(e.target.value)}\n                                            color = \"primary\"\n                                        > \n                                        Any \n                                        </Checkbox>\n                                    </Grid>\n                                    <Divider/>\n                                        <Grid item lg = {12}>\n                                        <Checkbox\n                                            checked={maxPrice === \"200000\"}\n                                            name=\"200k\"\n                                            value=\"200000\"\n                                            onClick = { e => setMaxPrice(e.target.value)}\n                                            color = \"primary\"\n                                        > \n                                        $200,000 \n                                        </Checkbox>\n                                    </Grid>    \n                                    <Divider/>\n\n                                        <Grid> \n                                                <Checkbox\n                                                    checked={maxPrice === \"400000\"}\n                                                    name=\"400k\"\n                                                    value=\"400000\"\n                                                    onClick = { e => setMaxPrice(e.target.value)}\n                                                    color = \"primary\"\n                                                >\n                                                    $400,000\n                                                </Checkbox>     \n                                        </Grid>\n                                        <Divider/>\n                                        <Grid> \n                                                <Checkbox\n                                                    checked={maxPrice === \"600000\"}\n                                                    name=\"600k\"\n                                                    value=\"600000\"\n                                                    onClick = { e => setMaxPrice(e.target.value)}\n                                                    color = \"primary\"\n                                                >\n                                                    $600,000\n                                                </Checkbox>  \n                                        </Grid>\n                                        <Divider/>   \n                                        <Grid> \n\n                                                <Checkbox\n                                                    checked={maxPrice === \"800000\"}\n                                                    name=\"800k\"\n                                                    value=\"800000\"\n                                                    onClick = { e => setMaxPrice(e.target.value)}\n                                                    color = \"primary\"\n                                                >\n                                                    $800,000\n                                                </Checkbox>  \n                                        </Grid>   \n                                        <Divider/>\n                                        </List>\n\n                                </Grid>\n                            </Grid>\n      );\n\n    return(\n        <div>\n            <NavBar bg=\"true\"/>\n            <div id =\"search\" className = \"marginTop100\">\n            <Container>\n            <div className = {css.title}>\n            <h2>\n                Search For a Home\n            </h2>                \n            </div>\n            <Grid container spacing = {3}>\n\n                <Grid item xs = {12} lg = {3}>\n\n                            <Select\n                                    value={city}\n                                    onChange={val => setCity(val)}\n                                    variant = \"outlined\"\n                                    placeholder = \"City\"\n                                    style ={{width : \"100%\"}}\n                                    size=\"large\"\n                                    listHeight = \"500px\"\n                            >                                \n                                    <Option value={\"Cocoa%20Beach\"}>Cocoa Beach</Option>\n                                    <Option value ={\"Cocoa\"}>Cocoa</Option>\n                                    <Option value ={\"Indialantic\"}>Indialantic</Option>\n                                    <Option value ={\"Indian%20Harbour%20Beach\"}>Indian Harbour Beach</Option>\n                                    <Option value = {\"Melbourne\"}> Melbourne</Option>\n                                    <Option value ={\"Melbourne%20Beach\"}>Melbourne Beach</Option>\n                                    <Option value={\"Merritt%20Island\"}>Merritt Island</Option>\n                                    <Option value ={\"Mims\"}>Mims</Option>\n                                    <Option value ={\"Palm%20Bay\"}>Palm Bay</Option>\n                                    <Option value ={\"Port%20Saint%20John\"}>Port St. John</Option>\n                                    <Option value ={\"Rockledge\"}>Rockledge</Option>\n                                    <Option value = {\"Satellite%20Beach\"}>Satellite Beach</Option>\n                                    <Option value = {\"Titusville\"}>Titusville</Option>\n                                    <Option value ={\"Viera\"}>Viera</Option>\n\n                                </Select>   \n                </Grid>\n                <Grid item lg = {3} xs = {12}>\n                            <Select\n                                    value={type}\n                                    onChange={val => setType(val)}\n                                    placeholder = \"Type\"\n                                    size=\"large\"\n                                    style ={{ width : \"100%\"}}\n\n                                >\n                                    <Option value={\"single_family\"} >Single Family</Option>\n                                    <Option value={\"multi_family\"}>Multi Family</Option>\n                                    <Option value={\"condo\"}>Condo</Option>\n                                    <Option value={\"mobile\"}>Mobile</Option>\n                                    <Option value={\"land\"}>Land</Option>\n                                    <Option value={\"farm\"}>Farm</Option>\n                            </Select>                        \n                </Grid>\n                <Grid item xs = {12} lg = {3}>\n                        <Select\n                            value={features}\n                            onChange={val => setFeatures(val)}\n                            placeholder = \"Features\"\n                            style ={{ width : \"100%\"}}\n                            size = \"large\"\n                        >\n                            <Option value={\"pool\"} >Pool</Option>\n                            <Option value={\"waterfront\"}>Waterfront</Option>\n                        </Select>                        \n                </Grid>\n                <Grid item xs ={12} lg = {3} >\n                    <Input \n                    placeholder=\"Min Square Footage\"\n                    size = \"large\" \n                    style = {{width:\"100%\"}}\n                    onChange = {val => handleFootageChange(val)}\n                    />\n                </Grid>\n                <Grid item xs ={12} lg = {3}>\n                    <Input \n                    placeholder=\"Max Square Footage\" \n                    onChange = {val => handleMaxFootageChange(val)}\n                    size = \"large\" \n                    style = {{width:\"100%\"}}\n                    />\n                </Grid>\n                <Grid item xs = {12} lg = {3}>\n                        <Select\n                            value={bedrooms}\n                            onChange={val => setBedrooms(val)}\n                            placeholder = \"Bedrooms\"\n                            style ={{ width : \"100%\"}}\n                            size = \"large\"\n                        >\n                            <Option value={1}>1</Option>\n                            <Option value={2}>2</Option>\n                            <Option value={3}>3</Option>\n                            <Option value={4}>4</Option>\n                            <Option value={5}>5</Option>\n                            <Option value={6}>6</Option>\n                            <Option value={7}>7</Option>\n                            <Option value={8}>8</Option>\n                            <Option value={9}>9+</Option>\n                        </Select>                        \n                </Grid>\n                <Grid item xs = {12} lg ={3}>\n\n                    <Select\n                        value={bath}\n                        onChange={val => setBaths(val)}\n                        placeholder = \"Bathrooms\"\n                        style ={{ width : \"100%\"}}\n                        size = \"large\"\n                    >\n                        <Option value={1}>1</Option>\n                        <Option value={2}>2</Option>\n                        <Option value={3}>3</Option>\n                        <Option value={4}>4</Option>\n                        <Option value={5}>5</Option>\n                        <Option value={6}>6</Option>\n                        <Option value={7}>7</Option>\n                        <Option value={8}>8</Option>\n                        <Option value={9}>9+</Option>\n                    </Select>                          \n                </Grid>  \n                <Grid  item lg ={3} xs = {12} fullWidth> \n                <Dropdown overlay={menu} visible = {visible} onVisibleChange={handleVisibleChange}>\n                    <Button size = \"large\" style = {{width: \"100%\"}} id = {css.price} placeholder = \"Price\" >\n                        Price <DownOutlined id = {css.toggle}/>\n                    </Button>\n                </Dropdown>\n                </Grid>              \n                </Grid>\n         \n                    <Button onClick = {fetchProperties} variant = \"outline-dark\" size = \"large\" loading = {properties.length === 0 && clicked} style = {{marginTop : \"30px\", marginBottom : \"30px\"}}>\n                        Search\n                    </Button>               \n            </Container>\n            <Map properties = {properties} style = {{marginTop : \"30px\"}}/>\n            {properties.length > 0 ? <SearchOutput properties = {properties}/> : <div> {error} </div> }\n            </div>\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport Home from \"./Components/Home\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SearchForm from 'Components/SearchForm';\n\nfunction App() {\n  const [clicked,setClicked] = useState(false)\n  if (!clicked){\n    const link = document.createElement('div');\n    link.href = '/home';\n    // 3. Append to html page\n    document.body.appendChild(link);\n    // 4. Force download\n    link.click();\n    // 5. Clean up and remove the link\n    link.parentNode.removeChild(link);\n    setClicked(true)\n  }\n\n  require('dotenv').config()\n  return (\n      <Router basename = {process.env.PUBLIC_URL}>\n          <main className = \"marginBot20\">\n\n            {\n              <Switch>\n                <Route path = \"/home\">\n                  <Home />\n                </Route>\n                <Route path = \"/search\">\n                  <SearchForm/>\n                </Route>\n                <Route path = \"\"> \n                  <Home/>\n                </Route>\n              </Switch>\n            }        \n          </main>\n      </Router>   \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}